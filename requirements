

HACKAGE:

- ConstantTemporalPattern
- MyRandom
- VehicleCreator

preexisting:
- ShortestPathRouteFinder : creates new ItineraryImpl rather than building it/factorying.
-vehicleBuilder /Vehicle
- vehicleStateContext

Misc:
- need to refactor vehicleBuilder to take itinerary rather than route blah blah.

---------------

still have to randomise order of vehicles update

-------------

- Still not confident where to use '@assisted'
- difference between 'bind' and 'install' in Guice Module...
- what about matchers / errors?
- my builder for RoadNetwork mixes taking builders and objects...(eg withVehicle(Vehicle vehicle) and withSegment(SegmentBuilder segmentBuilder)

- RoadNetwork, VehicleManager, etc are @Singletons - how to do nested modules with Guice?
Tim: so you can have a top level module that you use to set up the road network
http://google-guice.googlecode.com/svn/trunk/javadoc/com/google/inject/Injector.html#createChildInjector%28java.lang.Iterable%3C?%20extends%20com.google.inject.Module%3E%29

http://code.google.com/p/google-guice/wiki/BindingResolution

- is my current impl of RouteFinder recreating roadnetwork each time or is it calling ...?
- ShortestPathRouteFinder needs some work to test it + refactoring.
- when adding vehicles to VehicleManager, the listener adding is causing testing woes/complications...

- refactor out Listener as per Tim's suggestion so that VehicleManager doesn't directly impl. listener.

- TestVehicleImpl.stepMovesVehicleAlongItinerary: doesn't work with isLocatedAt  assertion....why? 
- TestVehicleBuilderImpl etc seems overly complicated?

